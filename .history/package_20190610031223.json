{
	"name": "version-boss",
	"displayName": "Version Boss",
	"icon": "_gfx/version-boss-icon.png",
	"description": "Versioning like a Boss - Semantic Versioner for Scripting Languages: Insert and Update Version, according to http://semver.org directives, Copyrights of file, Distribution License, and save-it using shortcuts.",
	"version": "1.3.1",
	"publisher": "nicola-granata",
	"license": "BSD-3-Clause-Attribution",
	"author": {
		"name": "Nicola Granata",
		"email": "vscode.extensions@daemoncms.com",
		"url": "https://github.com/nicolagranata"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/nicolagranata/vscode-extension-version-boss.git"
	},
	"keywords": [
		"semver.org",
		"semantic versioner",
		"versioning",
		"licensing",
		"copyrighting"
	],
	"engines": {
		"vscode": "^1.35.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:extension.versionboss-step-patch-up-autosave",
		"onCommand:extension.versionboss-step-chanver-up",
		"onCommand:extension.versionboss-step-channel-up",
		"onCommand:extension.versionboss-step-patch-up",
		"onCommand:extension.versionboss-step-minor-up",
		"onCommand:extension.versionboss-step-major-up",
		"onCommand:extension.versionboss-step-chanver-down",
		"onCommand:extension.versionboss-step-channel-down",
		"onCommand:extension.versionboss-step-patch-down",
		"onCommand:extension.versionboss-step-minor-down",
		"onCommand:extension.versionboss-step-major-down",
		"onCommand:extension.versionboss-step-version-align",
		"onCommand:extension.versionboss-boundversion",
		"onCommand:extension.versionboss-nakedversion",
		"onCommand:extension.versionboss-bannedversion",
		"onCommand:extension.versionboss-copyrights",
		"onCommand:extension.versionboss-licenses",
		"onCommand:extension.versionboss-getinfosarray",
		"onCommand:extension.versionboss-getsettingshelp"
	],
	"main": "./extension.js",
	"contributes": {
		"commands": [
			{
				"command": "extension.versionboss-step-patch-up-autosave",
				"title": "Patch - insert or step-up and save (autosave ever enabled)",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-patch-up",
				"title": "Patch - insert or step-up",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-minor-up",
				"title": "Minor - insert or step-up",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-major-up",
				"title": "Major - insert or step-up",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-channel-up",
				"title": "Channel - insert or step-up",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-chanver-up",
				"title": "Channel Ver. - insert or step-up",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-patch-down",
				"title": "Patch - insert or step-down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-minor-down",
				"title": "Minor - insert or step-down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-major-down",
				"title": "Major - insert or step-down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-channel-down",
				"title": "Channel - insert or step-down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-chanver-down",
				"title": "Channel Ver. - insert or step-down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-step-version-align",
				"title": "Align all version numbers to max version number without step-up/down",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-boundversion",
				"title": "Force insert version, with boundaries, at caret position",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-nakedversion",
				"title": "Force insert version, without boundaries, at caret position",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-bannedversion",
				"title": "Forces insert version, without boundaries, in the position of approach with the main ban of char (prevent the global passage up / down)",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-copyrights",
				"title": "Copyrights - insert or update",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-licenses",
				"title": "License - insert or update",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-getinfosarray",
				"title": "Get Copyrights Informations and put it into an PHP Associative Array or JS Object or JSON string (by file extension)",
				"category": "Version Boss"
			},
			{
				"command": "extension.versionboss-getsettingshelp",
				"title": "Help - Generate Help in Console log (usefull only for development of this extension)",
				"category": "Version Boss"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "extension.versionboss-step-major-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-minor-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-patch-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-channel-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-chanver-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-version-align",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-boundversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-nakedversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-bannedversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-copyrights",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-licenses",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-getinfosarray",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-getsettingshelp",
					"group": "Version Boss",
					"when": "editorTextFocus"
				}
			],
			"editor/context": [
				{
					"command": "extension.versionboss-step-major-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-minor-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-patch-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-channel-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-chanver-up",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-step-version-align",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-boundversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-nakedversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-bannedversion",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-copyrights",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-licenses",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-getinfosarray",
					"group": "Version Boss",
					"when": "editorTextFocus"
				},
				{
					"command": "extension.versionboss-getsettingshelp",
					"group": "Version Boss",
					"when": "editorTextFocus"
				}
			]
		},
		"keybindings": [
			{
				"command": "extension.versionboss-step-major-up",
				"key": "ctrl+alt+shift+Q",
				"mac": "ctrl+option+shift+Q",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-minor-up",
				"key": "ctrl+alt+shift+W",
				"mac": "ctrl+option+shift+W",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-patch-up-autosave",
				"key": "ctrl+alt+shift+S",
				"mac": "ctrl+option+shift+S",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-patch-up",
				"key": "ctrl+alt+shift+E",
				"mac": "ctrl+option+shift+E",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-channel-up",
				"key": "ctrl+alt+shift+R",
				"mac": "ctrl+option+shift+R",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-chanver-up",
				"key": "ctrl+alt+shift+T",
				"mac": "ctrl+option+shift+T",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-major-down",
				"key": "ctrl+alt+shift+Y",
				"mac": "ctrl+option+shift+Y",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-minor-down",
				"key": "ctrl+alt+shift+U",
				"mac": "ctrl+option+shift+U",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-patch-down",
				"key": "ctrl+alt+shift+I",
				"mac": "ctrl+option+shift+I",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-channel-down",
				"key": "ctrl+alt+shift+O",
				"mac": "ctrl+option+shift+O",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-chanver-down",
				"key": "ctrl+alt+shift+P",
				"mac": "ctrl+option+shift+P",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-step-version-align",
				"key": "ctrl+alt+shift+A",
				"mac": "ctrl+option+shift+A",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-boundversion",
				"key": "ctrl+alt+shift+B",
				"mac": "ctrl+option+shift+B",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-nakedversion",
				"key": "ctrl+alt+shift+V",
				"mac": "ctrl+option+shift+V",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-bannedversion",
				"key": "ctrl+alt+shift+N",
				"mac": "ctrl+option+shift+N",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-copyrights",
				"key": "ctrl+alt+shift+C",
				"mac": "ctrl+option+shift+C",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-licenses",
				"key": "ctrl+alt+shift+L",
				"mac": "ctrl+option+shift+L",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-getinfosarray",
				"key": "ctrl+alt+shift+J",
				"mac": "ctrl+option+shift+J",
				"when": "editorTextFocus"
			},
			{
				"command": "extension.versionboss-getsettingshelp",
				"key": "ctrl+alt+shift+H",
				"mac": "ctrl+option+shift+H",
				"when": "editorTextFocus"
			}
		],
		"configuration": {
			"type": "object",
			"properties": {
				"versionBoss.settings.setVariableNameForCopyrightsInfosAssociativeArray": {
					"type": "string",
					"minLength": 0,
					"default": "semverCopyrightsInfosObj",
					"markdownDescription": "Set the name of the default variable to insert the Copyrights Infos Array  into the code.\r\n\r\n> `PHP Language Tip`: do not use the prefix **`$`**: it will be added automatically based on the programming language of the file (if inserted, will be ignored in PHP files but not in others programming languages). You can use an array item (e.g. `glob_env[\"copyrights_infos\"]`).\r\n\r\n`Warning`: because of complexity of programming languages, this field not use pattern matching to check malformed typing. Please, pay attention!"
				},
				"versionBoss.settings.checkIfVariableNameForCopyrightsInfosAssociativeArrayExists": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Check if the Variable Name For Copyrights Storage already exists and prevents writing to avoid overrides.\r\n\r\nWhen set to `false`, overrides are permitted (naturally you could change the variable name after insert)."
				},
				"versionBoss.settings.setDefaultQuotingCharForGeneratedCode": {
					"type": "string",
					"enum": [
						"\"",
						"'",
						"`"
					],
					"default": "\"",
					"markdownDescription": "Set the default quoting char to insert generated code into your code (e.g. Copyrights Infos Array)."
				},
				"versionBoss.settings.versionUseChannelsStrictMatch": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Enable the strict matching of channel part of semver string.\r\n\r\n- `true`: only part of semver string matching the string of channels availabes in *Version Boss » Settings » Set Channels List* is recognized and updated\r\n\r\n- `false`: any channel string in semver full pattern is recognized and fixed/updated (e.g. `<!#FV> 1.25.0-roadrunner.1 </#FV>` -> `<!#FV> 1.25.0-roadrunner.1 </#FV>`)"
				},
				"versionBoss.settings.versionUpdateOnPatternMatch": {
					"type": "string",
					"default": "False",
					"enum": [
						"False",
						"True",
						"Only First Occurrence"
					],
					"minLength": 1,
					"markdownDescription": "Enable Version Update even without a boundaries. Version string must be enclosed in double-quote or single-quote.\r\n\r\n`Warning`: this may conflict with your code if you use patterns similar to `Major.Minor.Patch [-Channel [.ChannelVersion]]` (e.g. `\"1.0.0-alpha.2\"`) for different purposes than file versioning. You can insert a symbol before first digit to prevent update of a specific matching string (eg. `1.23.45` -> `#1.23.45`).\r\n\r\nUpdate only first occurrence of semver string enclosed in pair of double-quote or single-quote (e.g. \"`1.23.45`\") `in page` or `in line`.\r\n\r\nOn update semver if line where is caret position not match semver pattern, the first occurrence in page and all instances in boundaries (e.g. `<!#FV> 1.25.0-roadrunner.1 </#FV>`) are updated.\r\n\r\nOn update semver, if line where is caret position match semver pattern:\r\n\r\n1. `once`: the occurrence is updated; \r\n\r\n2. `more than once`: only first occurrence **after caret position** is updated.\r\n\r\n3. `more than once` but caret position after lastest match: to avoid unwanted update, no one occurrence is updated."
				},
				"versionBoss.settings.charForBannedVersion": {
					"type": "string",
					"default": "#",
					"enum": [
						"#",
						"§",
					],
					"minLength": 1,
					"markdownDescription": "Char for banned version for Changelog or for Function versioning (e.g. `#` -> `#1.23.45`)."
				},
				"versionBoss.settings.autoSaveAfterStepUp": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Save file after each step up."
				},
				"versionBoss.settings.insertQuotesWithFileVersion": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Insert File Version (without boundaries) with o without quotes."
				},
				"versionBoss.settings.setFirstVersion": {
					"type": "string",
					"default": "0.0.0",
					"minLength": 5,
					"pattern": "^(([0-9]+)\\.([0-9]+)\\.([0-9]+)(|\\-([a-z]{1,16}(|\\.([1-9]{1}([0-9]*))))))$",
					"markdownDescription": "Set Fisrt version to use when you start versioning `Major.Minor.Patch[-(any Channel[.(any ChannelVersion > 0)]]`\r\n\r\ne.g.: `1.0.0`,`0.0.0`, `1.0.0-beta.1`."
				},
				"versionBoss.settings.setChannelsList": {
					"type": "string",
					"default": "alpha, beta, perpBeta, openBeta, closedBeta, RC, RTM, GA, RTW",
					"minLength": 1,
					"pattern": "^(([a-zA-Z\\_]+)(,(\\s*)|$))+$",
					"markdownDescription": "Channels (except `Release` wich no have any abbreviation in semver.org directives - multiple data separated by comma `,`).\r\n\r\ne.g. `alpha`, `beta`,[`...`], `RC`,`RTM`,`GA`, `RTW`.\r\n\r\n`Warning 1`: only words with a-z chars and comma are valid values: the other symbols will be ignored."
				},
				"versionBoss.settings.showInformationMessage": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show Information Message when action is done."
				},
				"versionBoss.settings.showWarningAndErrorMessage": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Show Warning and Errors Messages when action could not be done."
				},
				"versionBoss.settings.resetChildsOnStepUp": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Set `0` to childs when step-up Minor or Major version.\r\n\r\ne.g. `true`:\r\n1. Step-up Major = `1.23.45` -> **`2.0.0`**;\r\n2. Step-up Minor = `1.23.45` -> `1.`**`24.0`**;\r\n\r\ne.g. `false`:\r\n1. Step-up Major = `1.23.45` -> **`2`**`.23.45`;\r\n2. Step-up Minor = `1.23.45` -> `1.`**`24`**`.45`."
				},
				"versionBoss.settings.setChannelToAlphaOnMajorVersionStepUp": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Set channel to `alpha` when step-up Major version.\r\n\r\ne.g. `true`:\r\n1. Step-up Major = `1.23.45-RC.3` -> **`2.0.0-alpha`**;\r\n\r\ne.g. `false` :\r\n1. Step-up Major = `1.23.45-RC.3` -> **`2.0.0`** (with `Reset Childs On Step Up ` set to `true`);\r\n2. Step-up Major = `1.23.45-RC.3` -> **`2.0.0-RC.3`** (with `Reset Childs On Step Up ` set to `false`)."
				},
				"versionBoss.settings.nonStandard.stepUpChannelOnChannelVersionLimitReach": {
					"type": "integer",
					"default": 0,
					"minimum": 0,
					"markdownDescription": "`Warning! - is not a standard`: Step Up Channel when Channel Version reach this limit (`0` for no step-up).\r\n\r\ne.g. Version limit: `3`: Steping up Channel Version from `1.23.45-beta.3` to `1.23.45-beta.4` make  **`1.23.45-RC`**."
				},
				"versionBoss.settings.nonStandard.stepUpMinorVersionOnPatchVersionLimitReach": {
					"type": "integer",
					"default": 0,
					"minimum": 0,
					"markdownDescription": "`Warning! - is not a standard`: Step Up Minor Version when Patch Version reach this limit (`0` for no step-up).\r\n\r\ne.g. Version limit: `99`: Steping up Patch Version from `1.23.99` to `1.23.100` make  **`1.24.00`**."
				},
				"versionBoss.settings.nonStandard.stepUpMajorVersionOnMinorVersionLimitReach": {
					"type": "integer",
					"default": 0,
					"minimum": 0,
					"markdownDescription": "`Warning! - is not a standard`: Step Up Major Version when Minor Version reach this limit (`0` for no step-up).\r\n\r\ne.g. Version limit: `99`: Steping up Patch Version from `1.99.45` to `1.100.45` make  **`2.00.00`**."
				},
				"versionBoss.boundaries.tagEnclosers": {
					"type": "string",
					"default": "<,>",
					"enum": [
						"<,>",
						"[,]",
						"{,}"
					],
					"markdownDescription": "Chars which enclose the boundary.\r\n\r\ne.g. `<` and `>` in `<!#FV>`1.23.45`</#FV>`."
				},
				"versionBoss.boundaries.boundaryIdentityChar": {
					"type": "string",
					"enum": [
						"#",
						"^",
						"_",
						"@",
						"§",
						"-"
					],
					"default": "#",
					"markdownDescription": "Symbol which set the identity of open/close boundary (e.g. `#` in `<!#FV>`)."
				},
				"versionBoss.boundaries.boundaryOpenChar": {
					"type": "string",
					"enum": [
						"!",
						"#",
						"^"
					],
					"default": "!",
					"markdownDescription": "Symbol which set open boundary (set to `not equal` to Boundary Close Char, or it will be substituted with another one, e.g. `!` in  `<!#FV>`)."
				},
				"versionBoss.boundaries.boundaryCloseChar": {
					"type": "string",
					"enum": [
						"/",
						"@",
						"§"
					],
					"default": "/",
					"markdownDescription": "Symbol which set close boundary (set to `not equal` to Boundary Open Char, or it will be substituted with another one, e.g. `/` in `</#FV>`)."
				},
				"versionBoss.boundaries.dataStringIDs.fileName": {
					"type": "string",
					"default": "FN",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File Name boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.fileBirth": {
					"type": "string",
					"default": "FB",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File Birth boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.fileVersion": {
					"type": "string",
					"default": "FV",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File Version boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.fileModificationTime": {
					"type": "string",
					"default": "FT",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File Modification Time boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.copyrights": {
					"type": "string",
					"default": "CR",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize or insert File Copyrights boundaries and values.\r\n\r\n***Note***:\r\n\r\nfor preserve data manually inserted in Copyrights block, system prevent to update it accidentally by pressing shortcuts. You have to delete the Copyrigths block to inserert new data (at least, if you want to leave old data for your convenience, delete only the boundaries tags <!#CR#!> and </#CR#/>). This is not valid for all other infos (even in Copirights block) wich is enclosed in boundaries (e.g. File Version, File Mod Time are ever updated,  Licensing only on pressing shortcuts)."
				},
				"versionBoss.boundaries.dataStringIDs.licenses": {
					"type": "string",
					"default": "LT",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File License boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.licensesUrl": {
					"type": "string",
					"default": "LU",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File License URL boundaries and values."
				},
				"versionBoss.boundaries.dataStringIDs.licensesClarification": {
					"type": "string",
					"default": "LD",
					"minLength": 1,
					"maxLength": 16,
					"markdownDescription": "String to recognize and update or insert File License Description boundaries and values."
				},
				"versionBoss.settings.copyrights.insertExtensionAuthorCredits": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "If you want, can include credits of the author of this extension: it will occupy only one row at bottom of yours copyrights informations."
				},
				"versionBoss.settings.copyrights.rowMaxLength": {
					"type": "integer",
					"minimum": 40,
					"maximum": 160,
					"default": 120,
					"markdownDescription": "Length of the rows of Copyrights in columns (80 columns suggested in Coding Standard Directives)."
				},
				"versionBoss.settings.copyrights.header": {
					"type": "string",
					"default": "Copyrigths ©",
					"markdownDescription": "Header of Copyrights box."
				},
				"versionBoss.settings.copyrights.fileAndLicensesInfosHeader": {
					"type": "string",
					"default": "File and License Informations",
					"markdownDescription": "Header of File and Licenses Informations box."
				},
				"versionBoss.settings.copyrights.setLicensesPatternUrl": {
					"type": "string",
					"default": "https://spdx.org/licenses/{LICENSE_ID}.html",
					"pattern": "^(((ht|f)tps?\\://(www(\\d*)\\.|))([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(|(([^ ]*))((\\/|)(\\?([^\\? ]*)|))))+$|^$",
					"markdownDescription": "This is the path to the site or file where you can store information about the license of your script.\r\n\r\nBy default, it use [SPDX site](https://spdx.org/licenses/)  data and the special keyword *`{LICENSE_ID}`* thath will be dinamically converted with license-id you choosed in url of ***SPDX***. For this, you have to insert in *Settings » Copyrights » Set Licences List* the exact IDs found at [SPDX Site](https://spdx.org/licenses/) in 2nd column (named *Identifier*), e.g. `LGPL-3.0-or-later` will produce the following url `https://spdx.org/licenses/LGPL-3.0-or-later.html`. Url can be customized (e.g. `https://example.com/get_lic.php?somevar=someval&mylicense={LICENSE_ID}`)."
				},
				"versionBoss.settings.copyrights.setLicensesList": {
					"type": "string",
					"default": "BSD-3-Clause-Attribution,BSD-3-Clause,BSD-2-Clause,GPL-3.0-or-later,LGPL-3.0-or-later,MIT,MPL-2.0,CDDL-1.1,EPL-2.0,Apache-2.0,Copyrighted Commercial Software|http://wwww.example.com/licenses/?&lic={LICENSE_ID},Free Software for Private and Commercial use|See License.txt,Free Software for Private use|See License-{LICENSE_ID}.txt",
					"markdownDescription": "Licenses in which, generally, you want to distribute your software (separate licenses by comma `,` and structure `LICENSE_NAME_OR_ID` | `LICENSE_URL` | `LICENSE_CLARIFICATION` using pipe `|`). Value before first comma is default.\r\n\r\n1. `LICENSE_NAME_OR_ID` : use id from [SPDX site](https://spdx.org/licenses/) or your personal id or name (name will be converted in ID-like);\r\n\r\n2. `LICENSE_URL`: url of your license. If empty, value in *Set Licenses Pattern Url* will be used;\r\n\r\n3. `LICENSE_CLARIFICATION`: Short clarification about licenses. If empty, value in *Set Licenses Default Clarification* will be used.\r\n\r\n*To get Licenses IDs*: go to [SPDX Site](https://spdx.org/licenses/), get strings (even more than one) from 2nd column (named *Identifier*) and enter it in this field (separated by comma `,`)."
				},
				"versionBoss.settings.copyrights.setLicensesDefaultClarification": {
					"type": "string",
					"default": "This file may not be redistributed in whole or significant part.",
					"markdownDescription": "Licenses clarification about use of file and its contents. This is default clarification. To set clarification for each license, please use *Set Licenses List*."
				},
				"versionBoss.settings.copyrights.insertFileBasename": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Insert current file basename."
				},
				"versionBoss.settings.copyrights.insertFileBirthDateAndTime": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Insert current file birth date."
				},
				"versionBoss.settings.copyrights.owner": {
					"type": "string",
					"enum": [
						"0 - Author",
						"1 - Company",
						"2 - Author&Company",
						"3 - Company&Author"
					],
					"markdownDescription": "Owner of File / Code."
				},
				"versionBoss.settings.copyrights.labelAndValueSeparatorChars": {
					"type": "string",
					"default": ">",
					"minLength": 0,
					"maxLength": 4,
					"markdownDescription": "Separator betwen Labels and Values of Copyrights data."
				},
				"versionBoss.settings.copyrights.topAndBottomFrameChars": {
					"type": "string",
					"default": "*",
					"minLength": 1,
					"maxLength": 4,
					"markdownDescription": "Copyrights Frame chars.\r\nAt least one char."
				},
				"versionBoss.settings.copyrights.leftAndRightFrameChars": {
					"type": "string",
					"default": "*",
					"minLength": 0,
					"maxLength": 4,
					"markdownDescription": "Copyrights Frame chars.\r\nLeave empty to use char `space` and make a very basic copyrights frame.\r\nNote: the first char of `Top And Bottom Frame Chars` is used as left character to prevent format of comment block by the editor."
				},
				"versionBoss.settings.copyrights.fillChars": {
					"type": "string",
					"default": "",
					"minLength": 0,
					"maxLength": 4,
					"markdownDescription": "Copyrights empty spaces Fill char.\r\nLeave empty to use char `space`."
				},
				"versionBoss.settings.copyrights.sectionSeparatorChars": {
					"type": "string",
					"default": "-",
					"minLength": 1,
					"maxLength": 4,
					"markdownDescription": "Separator betwen Headers and data of Copyrights information."
				},
				"versionBoss.copyrights.authorsNames": {
					"type": "string",
					"default": "Wyle Coyote",
					"markdownDescription": "Authors Names (Labels separated by `:` from data and multiple data separated by comma `,`).\r\nLeave empty for none."
				},
				"versionBoss.copyrights.authorsEmail": {
					"type": "string",
					"default": "wyle.coyote@example.com",
					"pattern": "^(([a-z0-9\\_\\-\\.]+)\\@([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(,(\\s*)|$))+$|^$",
					"markdownDescription": "Author E-Mail address.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.authorsWebsites": {
					"type": "string",
					"default": "http://www.example.com, http://wwww.test.com",
					"pattern": "^(((ht|f)tps?\\://(www(\\d*)\\.|))([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(|(([^ ]*))(\\/|)(\\?([^\\? ]*)|))(,(\\s*)|$))+$|^$",
					"markdownDescription": "Your websites address (Labels separated by `:` from data and multiple data separated by comma `,`).\r\ne.g.: If you use short url -> Facebook: `https://bit.ly/18AOiDE`."
				},
				"versionBoss.copyrights.authorsSocials": {
					"type": "string",
					"default": "https://www.facebook.com/, https://www.twitter.com/,",
					"pattern": "^(((ht|f)tps?\\://(www(\\d*)\\.|))([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(|(([^ ]*))(\\/|)(\\?([^\\? ]*)|))(,(\\s*)|$))+$|^$",
					"markdownDescription": "Company Social Networks .\r\nMultiple data separated by comma `,`.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.companyName": {
					"type": "string",
					"default": "A.C.M.E.",
					"markdownDescription": "Company name.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.companyEmail": {
					"type": "string",
					"default": "acme@example.com",
					"pattern": "^(([a-z0-9\\_\\-\\.]+)\\@([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(,(\\s*)|$))+$|^$",
					"markdownDescription": "Company E-Mail address.\r\nMultiple data separated by comma `,`.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.companyWebsites": {
					"type": "string",
					"default": "http://www.example.com",
					"pattern": "^(((ht|f)tps?\\://(www(\\d*)\\.|))([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(|(([^ ]*))(\\/|)(\\?([^\\? ]*)|))(,(\\s*)|$))+$|^$",
					"markdownDescription": "Company websites address.\r\nMultiple data separated by comma `,`.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.companySocials": {
					"type": "string",
					"default": "https://www.facebook.com/, https://www.twitter.com/,",
					"pattern": "^(((ht|f)tps?\\://(www(\\d*)\\.|))([a-z0-9\\_\\-\\.]+)\\.([a-z0-9]{2,64})(|(([^ ]*))(\\/|)(\\?([^\\? ]*)|))(,(\\s*)|$))+$|^$",
					"markdownDescription": "Company Social Networks .\r\nMultiple data separated by comma `,`.\r\nLeave empty for none."
				},
				"versionBoss.copyrights.credits": {
					"type": "string",
					"default": "",
					"markdownDescription": "Other people who constantly contribute to perfecting your code.\r\nMultiple data separated by comma `,`.\r\nLeave empty for none or `-`  to leave a label and space for manual editing."
				},
				"versionBoss.copyrights.otherInfos": {
					"type": "string",
					"default": "",
					"markdownDescription": "Other generic infos.\r\nMultiple data separated by comma `,`.\r\nLeave empty for none or `-` to leave a label and space for manual editing."
				},
				"versionBoss.copyrights.notes": {
					"type": "string",
					"default": "",
					"markdownDescription": "Author Notes.\r\nMultiple data separated by comma `,`.\r\nLeave empty for none or `-` to leave a label and space for manual editing."
				}
			}
		}
	},
	"scripts": {
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"typescript": "^3.5.1",
		"vscode": "^1.1.34",
		"eslint": "^5.16.0",
		"@types/node": "^12.0.7",
		"@types/mocha": "^5.2.7"
	}
}